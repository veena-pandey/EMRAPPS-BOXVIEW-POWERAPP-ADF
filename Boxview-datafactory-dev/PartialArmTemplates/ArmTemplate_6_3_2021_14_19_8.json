{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Boxview-datafactory-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load Site Data To Blob')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CSP"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "blob_site_staging_data",
								"type": "DatasetReference"
							},
							"name": "StagingBlobSite"
						},
						{
							"dataset": {
								"referenceName": "blob_country_exported_data",
								"type": "DatasetReference"
							},
							"name": "countrydatafromblob"
						},
						{
							"dataset": {
								"referenceName": "blob_pool_exported_data",
								"type": "DatasetReference"
							},
							"name": "pooldatafromblob"
						},
						{
							"dataset": {
								"referenceName": "blob_city_exported_data",
								"type": "DatasetReference"
							},
							"name": "citydatafromdataverse"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "blob_site_csp_intermediate_data",
								"type": "DatasetReference"
							},
							"name": "IntermediateBlobSite",
							"description": "Export data to blob_customer_data"
						}
					],
					"transformations": [
						{
							"name": "DataTransformation"
						},
						{
							"name": "LookupCountry"
						},
						{
							"name": "SelectCountry"
						},
						{
							"name": "LookupPool"
						},
						{
							"name": "SelectPool"
						},
						{
							"name": "Lookupcity"
						},
						{
							"name": "SelectCity"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['sitecsp']) ~> StagingBlobSite\nsource(output(\n\t\tmaersk_name as string,\n\t\tmaersk_countrycode as string,\n\t\tmaersk_countryid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['country/*.parquet']) ~> countrydatafromblob\nsource(output(\n\t\tmaersk_name as string,\n\t\tmaersk_poolid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['pool/*.parquet']) ~> pooldatafromblob\nsource(output(\n\t\tmaersk_cityid as string,\n\t\tmaersk_name as string,\n\t\tmaersk_citycode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['city/*.parquet']) ~> citydatafromdataverse\nStagingBlobSite derive(loc_cd = trim(toString(byName('loc_cd'))),\n\t\tsite_type = trim(toString(byName('site_type'))),\n\t\tloc_dsc = trim(toString(byName('loc_dsc'))),\n\t\tcountry_cd = trim(toString(byName('country_cd'))),\n\t\tcountry_dsc = trim(toString(byName('country_dsc'))),\n\t\tcity_cd = trim(toString(byName('city_cd'))),\n\t\tcity_dsc = trim(toString(byName('city_dsc'))),\n\t\tcluster_cd = trim(toString(byName('cluster_cd'))),\n\t\tcluster_dsc = trim(toString(byName('cluster_dsc'))),\n\t\tregion_cd = trim(toString(byName('region_cd'))),\n\t\tregion_dsc = trim(toString(byName('region_dsc'))),\n\t\tpool_cd = trim(toString(byName('pool_cd'))),\n\t\tpool_dsc = trim(toString(byName('pool_dsc'))),\n\t\tlopsc_cd = trim(toString(byName('lopsc_cd'))),\n\t\tlopsc_dsc = trim(toString(byName('lopsc_dsc'))),\n\t\tlat = trim(toString(byName('lat'))),\n\t\tlon = trim(toString(byName('lon'))),\n\t\temail_address = trim(toString(byName('email_address'))),\n\t\tphone = trim(toString(byName('phone'))),\n\t\tcontact_person = trim(toString(byName('contact_person'))),\n\t\taddress_1 = trim(toString(byName('address_1'))),\n\t\taddress_2 = trim(toString(byName('address_2'))),\n\t\taddress_3 = trim(toString(byName('address_3'))),\n\t\tpostal_code = trim(toString(byName('postal_code'))),\n\t\tcity_name = trim(toString(byName('city_name'))),\n\t\tlocal_tax = trim(toString(byName('local_tax'))),\n\t\tglobal_tax = trim(toString(byName('global_tax'))),\n\t\teu_tax = trim(toString(byName('eu_tax'))),\n\t\tstate_province_name = trim(toString(byName('state_province_name'))),\n\t\tsales_manager_dry = trim(toString(byName('sales_manager_dry'))),\n\t\tsales_manager_reefer = trim(toString(byName('sales_manager_reefer'))),\n\t\tcustomer_service = trim(toString(byName('customer_service'))),\n\t\tsales_operations = trim(toString(byName('sales_operations')))) ~> DataTransformation\nSelectCity, countrydatafromblob lookup(upper(country_dsc) == upper(maersk_name),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCountry\nLookupCountry select(mapColumn(\n\t\tloc_cd,\n\t\tsite_type,\n\t\tloc_dsc,\n\t\tcountry_cd,\n\t\tcity_cd,\n\t\tcity_dsc,\n\t\tcluster_cd,\n\t\tcluster_dsc,\n\t\tregion_cd,\n\t\tregion_dsc,\n\t\tpool_cd,\n\t\tpool_dsc,\n\t\tlopsc_cd,\n\t\tlopsc_dsc,\n\t\tlat,\n\t\tlon,\n\t\tcity_name,\n\t\tstate_province_name,\n\t\tcountry_dsc = maersk_countryid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCountry\nSelectCountry, pooldatafromblob lookup(upper(pool_dsc) == upper(maersk_name),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupPool\nLookupPool select(mapColumn(\n\t\tloc_cd,\n\t\tsite_type,\n\t\tloc_dsc,\n\t\tlat,\n\t\tlon,\n\t\tcountry_dsc,\n\t\tpool_dsc = maersk_poolid,\n\t\tmaersk_city = city_cd,\n\t\tsite_code = loc_cd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPool\nDataTransformation, citydatafromdataverse lookup(upper(city_dsc) == upper(maersk_name),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookupcity\nLookupcity select(mapColumn(\n\t\tloc_cd,\n\t\tsite_type,\n\t\tloc_dsc,\n\t\tcountry_cd,\n\t\tcountry_dsc,\n\t\tcity_cd = maersk_cityid,\n\t\tcity_dsc,\n\t\tcluster_cd,\n\t\tcluster_dsc,\n\t\tregion_cd,\n\t\tregion_dsc,\n\t\tpool_cd,\n\t\tpool_dsc,\n\t\tlopsc_cd,\n\t\tlopsc_dsc,\n\t\tlat,\n\t\tlon,\n\t\temail_address,\n\t\tphone,\n\t\tcontact_person,\n\t\taddress_1,\n\t\taddress_2,\n\t\taddress_3,\n\t\tpostal_code,\n\t\tcity_name,\n\t\tlocal_tax,\n\t\tglobal_tax,\n\t\teu_tax,\n\t\tstate_province_name,\n\t\tsales_manager_dry,\n\t\tsales_manager_reefer,\n\t\tcustomer_service,\n\t\tsales_operations\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCity\nSelectPool sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IntermediateBlobSite"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		}
	]
}