{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Boxview-datafactory-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load DMRL Workorder Data To Blob_rework')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DMRL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "blob_DMRLWorkorder_staging_data",
								"type": "DatasetReference"
							},
							"name": "StagingBlobDMRLWorkorderSnapshot"
						},
						{
							"dataset": {
								"referenceName": "blob_site_csp_exported_data",
								"type": "DatasetReference"
							},
							"name": "sitedatafromblob"
						},
						{
							"dataset": {
								"referenceName": "blob_DMRLWorkorder_exported_data",
								"type": "DatasetReference"
							},
							"name": "dmrlworkorderdataverseData"
						},
						{
							"dataset": {
								"referenceName": "blob_DMRLContainer_exported_data",
								"type": "DatasetReference"
							},
							"name": "dmrlcontainerdatafromblob"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "blob_DMRLWorkorder_Intermediate_data",
								"type": "DatasetReference"
							},
							"name": "IntermediateBlobDMRLWorkorder",
							"description": "Export data to blob_customer_data"
						}
					],
					"transformations": [
						{
							"name": "DataTransformation"
						},
						{
							"name": "LookupLocation"
						},
						{
							"name": "SelectLocation"
						},
						{
							"name": "checksum"
						},
						{
							"name": "LookupDMRLContainerId"
						},
						{
							"name": "SelectDMRLContainerId"
						},
						{
							"name": "RelateTwoDataSets"
						},
						{
							"name": "FilterOnlyNewRows"
						},
						{
							"name": "SelectRequiredColumnsWithChecksum"
						}
					],
					"script": "source(output(\n\t\twork_order_id as string,\n\t\tcontainer_id as string,\n\t\tis_sales as boolean,\n\t\tis_surplus as boolean,\n\t\tequipment_size as string,\n\t\tlocation_id as string,\n\t\tlast_move_timestamp as timestamp,\n\t\tis_empty as boolean,\n\t\tlast_move as string,\n\t\tequipment_redelivery_status as boolean,\n\t\tadjusted_MRL as decimal(38,18),\n\t\tadjusted_MRL_box as decimal(38,18),\n\t\ttotal_cost_with_maersk_parts_usd as double,\n\t\ttotal_price_not_covered_by_warranty as double,\n\t\ttotal_cost_under_warranty as double,\n\t\texpiry_date as string,\n\t\tshould_repair as boolean,\n\t\treasoning_for_rejection as string,\n\t\twork_order_created_date as timestamp,\n\t\turgent as boolean,\n\t\tshop_id as string,\n\t\tcluster_id as string,\n\t\twolocation_id as string,\n\t\ttotal_cost_usd as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dmrlworkorder']) ~> StagingBlobDMRLWorkorderSnapshot\nsource(output(\n\t\tmaersk_sitecode as string,\n\t\tmaersk_siteid as string,\n\t\tmaersk_name as string,\n\t\tmaersk_country as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['sitecsp/*.parquet']) ~> sitedatafromblob\nsource(output(\n\t\tcreatedby as string,\n\t\tcreatedbyname as string,\n\t\tcreatedbyyominame as string,\n\t\tcreatedon as timestamp,\n\t\tcreatedonbehalfby as string,\n\t\tcreatedonbehalfbyname as string,\n\t\tcreatedonbehalfbyyominame as string,\n\t\timportsequencenumber as integer,\n\t\tmaersk_adjustedmrl as integer,\n\t\tmaersk_adjustedmrlbox as integer,\n\t\tmaersk_datahash as string,\n\t\tmaersk_equipmentid as string,\n\t\tmaersk_equipmentidname as string,\n\t\tmaersk_equipmentredeliverystatus as boolean,\n\t\tmaersk_equipmentsize as integer,\n\t\tmaersk_expirydate as timestamp,\n\t\tmaersk_isempty as boolean,\n\t\tmaersk_issales as boolean,\n\t\tmaersk_isshouldrepair as boolean,\n\t\tmaersk_issurplus as boolean,\n\t\tmaersk_isurgent as boolean,\n\t\tmaersk_lastmove as integer,\n\t\tmaersk_lastmovetimestamp as timestamp,\n\t\tmaersk_location as string,\n\t\tmaersk_locationname as string,\n\t\tmaersk_name as string,\n\t\tmaersk_reasoningforrejection as string,\n\t\tmaersk_totalcostunderwarranty as integer,\n\t\tmaersk_totalcostwithmaerskparts as integer,\n\t\tmaersk_totalpricenotcoveredbywarranty as integer,\n\t\tmaersk_workorderid as string,\n\t\tmodifiedby as string,\n\t\tmodifiedbyname as string,\n\t\tmodifiedbyyominame as string,\n\t\tmodifiedon as timestamp,\n\t\tmodifiedonbehalfby as string,\n\t\tmodifiedonbehalfbyname as string,\n\t\tmodifiedonbehalfbyyominame as string,\n\t\toverriddencreatedon as timestamp,\n\t\townerid as string,\n\t\towneridname as string,\n\t\towneridtype as string,\n\t\towneridyominame as string,\n\t\towningbusinessunit as string,\n\t\towningteam as string,\n\t\towninguser as string,\n\t\tstatecode as integer,\n\t\tstatuscode as integer,\n\t\ttimezoneruleversionnumber as integer,\n\t\tutcconversiontimezonecode as integer,\n\t\tversionnumber as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dmrlworkorder']) ~> dmrlworkorderdataverseData\nsource(output(\n\t\tmaersk_reasoning as string,\n\t\tmaersk_location as string,\n\t\tmaersk_dmrlcontainerid as string,\n\t\tmaersk_mrlbox as integer,\n\t\tmaersk_equipmentmanufacturer as string,\n\t\tmaersk_productionyear as string,\n\t\tmaersk_issurplus as boolean,\n\t\tmaersk_name as string,\n\t\tmaersk_issales as boolean,\n\t\tmaersk_mrlunit as integer,\n\t\tmaersk_damageprediction as double,\n\t\tmaersk_containertype as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dmrlcontainer']) ~> dmrlcontainerdatafromblob\nStagingBlobDMRLWorkorderSnapshot derive(work_order_id = trim(toString(byName('work_order_id'))),\n\t\tcontainer_id = trim(toString(byName('container_id'))),\n\t\tis_sales = byName('is_sales'),\n\t\tis_surplus = byName('is_surplus'),\n\t\tequipment_size = case(toInteger(byName('equipment_size'))==20,379430000,\r\n    case(toInteger(byName('equipment_size'))==40,379430001,\r\n        case(toInteger(byName('equipment_size'))==45,379430002))),\n\t\twolocation_id = trim(toString(byName('location_id'))),\n\t\tlast_move_timestamp = toTimestamp(toString(byName('last_move_timestamp'))),\n\t\tis_empty = byName('is_empty'),\n\t\tlast_move = case(trim(toString(byName('last_move')))=='GATE-IN',379430000,\r\n    case(trim(toString(byName('last_move')))=='GATE-OUT',379430001,\r\n        case(trim(toString(byName('last_move')))=='DISCHARG',379430002,\r\n            case(trim(toString(byName('last_move')))=='LOAD',379430003,\r\n                case(trim(toString(byName('last_move')))=='ON-RAIL',379430004,\r\n                    case(trim(toString(byName('last_move')))=='OFF-RAIL',379430005,\r\n                        case(trim(toString(byName('last_move')))=='STRIPPIN',379430006))))))),\n\t\tequipment_redelivery_status = byName('equipment_redelivery_status'),\n\t\tadjusted_MRL = toInteger(byName('adjusted_MRL')),\n\t\tadjusted_MRL_box = toInteger(byName('adjusted_MRL_box')),\n\t\ttotal_cost_with_maersk_parts_usd = toInteger(byName('total_cost_with_maersk_parts_usd')),\n\t\ttotal_price_not_covered_by_warranty = toInteger(byName('total_price_not_covered_by_warranty')),\n\t\ttotal_cost_under_warranty = toInteger(byName('total_cost_under_warranty')),\n\t\texpiry_date = toTimestamp(toString(byName('expiry_date')),'yyyy-mm-dd'),\n\t\tshould_repair = byName('should_repair'),\n\t\treasoning_for_rejection = trim(toString(byName('reasoning_for_rejection'))),\n\t\twork_order_created_date = toTimestamp(toString(byName('work_order_created_date'))),\n\t\turgent = byName('urgent'),\n\t\tshop_id = trim(toString(byName('shop_id'))),\n\t\tcluster_id = trim(toString(byName('cluster_id'))),\n\t\ttotal_cost_usd = toFloat(byName('total_cost_usd'))) ~> DataTransformation\nDataTransformation, sitedatafromblob lookup(wolocation_id == maersk_sitecode,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupLocation\nLookupLocation select(mapColumn(\n\t\twork_order_id,\n\t\tcontainer_id,\n\t\tis_sales,\n\t\tis_surplus,\n\t\tequipment_size,\n\t\tlocation_id = maersk_siteid,\n\t\tlast_move_timestamp,\n\t\tis_empty,\n\t\tlast_move,\n\t\tequipment_redelivery_status,\n\t\tadjusted_MRL,\n\t\tadjusted_MRL_box,\n\t\ttotal_cost_with_maersk_parts_usd,\n\t\ttotal_price_not_covered_by_warranty,\n\t\ttotal_cost_under_warranty,\n\t\texpiry_date,\n\t\tshould_repair,\n\t\treasoning_for_rejection,\n\t\twork_order_created_date,\n\t\turgent,\n\t\tshop_id,\n\t\tcluster_id,\n\t\tlocid = wolocation_id,\n\t\ttotal_cost_usd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLocation\nSelectDMRLContainerId derive(checksum = sha1(work_order_id,container_id,is_sales,is_surplus,equipment_size,location_id,last_move_timestamp,is_empty,last_move,equipment_redelivery_status,adjusted_MRL,adjusted_MRL_box,total_cost_with_maersk_parts_usd,total_price_not_covered_by_warranty,total_cost_under_warranty,expiry_date,should_repair,reasoning_for_rejection,work_order_created_date,urgent,shop_id,cluster_id, wolocation_id,total_cost_usd)) ~> checksum\nSelectLocation, dmrlcontainerdatafromblob lookup(container_id == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDMRLContainerId\nLookupDMRLContainerId select(mapColumn(\n\t\twork_order_id,\n\t\tcontainer_id = maersk_dmrlcontainerid,\n\t\tis_sales,\n\t\tis_surplus,\n\t\tequipment_size,\n\t\tlocation_id,\n\t\tlast_move_timestamp,\n\t\tis_empty,\n\t\tlast_move,\n\t\tequipment_redelivery_status,\n\t\tadjusted_MRL,\n\t\tadjusted_MRL_box,\n\t\ttotal_cost_with_maersk_parts_usd,\n\t\ttotal_price_not_covered_by_warranty,\n\t\ttotal_cost_under_warranty,\n\t\texpiry_date,\n\t\tshould_repair,\n\t\treasoning_for_rejection,\n\t\twork_order_created_date,\n\t\turgent,\n\t\tshop_id,\n\t\tcluster_id,\n\t\twolocation_id = locid,\n\t\ttotal_cost_usd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDMRLContainerId\nchecksum, dmrlworkorderdataverseData join(work_order_id == maersk_name,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> RelateTwoDataSets\nRelateTwoDataSets filter(true()) ~> FilterOnlyNewRows\nFilterOnlyNewRows select(mapColumn(\n\t\tmaersk_name = work_order_id,\n\t\tmaersk_equipmentid = container_id,\n\t\tmaersk_issales = is_sales,\n\t\tmaersk_issurplus = is_surplus,\n\t\tmaersk_equipmentsize = equipment_size,\n\t\tmaersk_location = location_id,\n\t\tmaersk_lastmovetimestamp = last_move_timestamp,\n\t\tmaersk_isempty = is_empty,\n\t\tmaersk_lastmove = last_move,\n\t\tmaersk_equipmentredeliverystatus = equipment_redelivery_status,\n\t\tmaersk_adjustedmrl = adjusted_MRL,\n\t\tmaersk_adjustedmrlbox = adjusted_MRL_box,\n\t\tmaersk_totalcostwithmaerskparts = total_cost_with_maersk_parts_usd,\n\t\tmaersk_totalpricenotcoveredbywarranty = total_price_not_covered_by_warranty,\n\t\tmaersk_totalcostunderwarranty = total_cost_under_warranty,\n\t\tmaersk_expirydate = expiry_date,\n\t\tmaersk_isshouldrepair = should_repair,\n\t\tmaersk_reasoningforrejection = reasoning_for_rejection,\n\t\toverriddencreatedon = work_order_created_date,\n\t\tmaersk_isurgent = urgent,\n\t\tmaersk_shopid = shop_id,\n\t\tmaersk_clusterid = cluster_id,\n\t\tmaersk_locid = wolocation_id,\n\t\tmaersk_totalcostusd = total_cost_usd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumnsWithChecksum\nSelectRequiredColumnsWithChecksum sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IntermediateBlobDMRLWorkorder"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Potential_Container_To_Sell Data To Blob')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CSS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "blob_site_csp_exported_data",
								"type": "DatasetReference"
							},
							"name": "sitedatafromblob"
						},
						{
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_staging_data",
								"type": "DatasetReference"
							},
							"name": "StagingBlobPotentialContainerToSell"
						},
						{
							"dataset": {
								"referenceName": "blob_pool_exported_data",
								"type": "DatasetReference"
							},
							"name": "pooldatafromblob"
						},
						{
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_exported_data",
								"type": "DatasetReference"
							},
							"name": "dataversedata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference"
							},
							"name": "IntermediateBlobPotentialcontainerstosell",
							"description": "Export data to blob_customer_data"
						}
					],
					"transformations": [
						{
							"name": "DataTransformation"
						},
						{
							"name": "LookupDiplaLocationId"
						},
						{
							"name": "SelectDiplaLocation"
						},
						{
							"name": "LookupLastRailDestination"
						},
						{
							"name": "SelectLastRailDestination"
						},
						{
							"name": "LookupCDSDestination"
						},
						{
							"name": "SelectCDSDestination"
						},
						{
							"name": "LookupLastMotherVesselDestinationLocation"
						},
						{
							"name": "SelectLastMotherVesselDestinationLocation"
						},
						{
							"name": "LookupAlternateSellLocation"
						},
						{
							"name": "SelectAlternateSellLocation"
						},
						{
							"name": "LookupPool"
						},
						{
							"name": "SelectPool"
						},
						{
							"name": "LookupRegPool"
						},
						{
							"name": "SelectRegPool"
						},
						{
							"name": "LookupAlternateSellPool"
						},
						{
							"name": "SelectAlternateSellPool"
						},
						{
							"name": "Checksum"
						},
						{
							"name": "RelateTwoDataset"
						},
						{
							"name": "FilterNewRows"
						},
						{
							"name": "SelectRequiredColumns"
						},
						{
							"name": "SelectNecessaryColumnsFromDataverse"
						},
						{
							"name": "FilterRowsWihAllocatedDatePopulated"
						},
						{
							"name": "LookupPlaceOfDeliveryLocation"
						},
						{
							"name": "SelectPlaceOfDeliveryLocation"
						},
						{
							"name": "LookupPoolAllocatedTo"
						},
						{
							"name": "SelectPoolAllocatedTo"
						}
					],
					"script": "source(output(\n\t\tmaersk_siteid as string,\n\t\tmaersk_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['sitecsp/*.parquet']) ~> sitedatafromblob\nsource(output(\n\t\tcontainer_id as string,\n\t\tdrop_number as string,\n\t\tconsignee_scv_code as string,\n\t\tpool_id as string,\n\t\treg_pool as string,\n\t\teqpno as string,\n\t\tlast_mother_vessel_arrival_time as timestamp,\n\t\tlast_mother_vessel_destination_location_id as string,\n\t\tplace_of_delivery_location_id as string,\n\t\tdestination_arrival_time_utc_expected as timestamp,\n\t\tshipment_id as string,\n\t\tbooking_number as string,\n\t\tbrand as string,\n\t\tequipment_group as string,\n\t\tproduction_year as integer,\n\t\tequipment_own_type as string,\n\t\tdestination_arrival_date as timestamp,\n\t\tdipla_location_id as string,\n\t\tdipla_location_name as string,\n\t\tdestination_location_name as string,\n\t\tconsignee_name as string,\n\t\tlast_rail_dest as string,\n\t\tcarrier_name as string,\n\t\tnext_wonumber as string,\n\t\tnext_carrier_name as string,\n\t\twonumber as string,\n\t\trail_combo as boolean,\n\t\two_number as string,\n\t\ttruck_carrier_name as string,\n\t\tcds_dest as string,\n\t\tregion as string,\n\t\talternate_sell_location as string,\n\t\talternate_sell_pool as string,\n\t\tbreak_even_price_pool as double,\n\t\tbreak_even_price_alt_pool as double,\n\t\tweek as integer,\n\t\thaulage_type as string,\n\t\tpool_allocated_to as string,\n\t\tallocation_date as timestamp,\n\t\tallocated_by as string,\n\t\tallocated_by_algorithm as boolean,\n\t\tdispatch_date as timestamp,\n\t\tdispatch_by as string,\n\t\tweek_loc as string,\n\t\tis_allocated as string,\n\t\tclient_name as string,\n\t\taddress as string,\n\t\temail as string,\n\t\ttype as string,\n\t\tevac_cost_pool as double,\n\t\tevac_cost_alt_pool as double,\n\t\tprimary_composite_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['potentialcontainerstosell']) ~> StagingBlobPotentialContainerToSell\nsource(output(\n\t\tmaersk_name as string,\n\t\tmaersk_poolid as string,\n\t\tmaersk_poolcode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['pool/*.parquet']) ~> pooldatafromblob\nsource(output(\n\t\tcreatedby as string,\n\t\tcreatedbyname as string,\n\t\tcreatedbyyominame as string,\n\t\tcreatedon as timestamp,\n\t\tcreatedonbehalfby as string,\n\t\tcreatedonbehalfbyname as string,\n\t\tcreatedonbehalfbyyominame as string,\n\t\timportsequencenumber as integer,\n\t\tmaersk_address as string,\n\t\tmaersk_allocatedby as string,\n\t\tmaersk_allocatedbyalgorythm as boolean,\n\t\tmaersk_allocateddeallocateddate as timestamp,\n\t\tmaersk_allocationdate as timestamp,\n\t\tmaersk_alternateselllocation as string,\n\t\tmaersk_alternateselllocationname as string,\n\t\tmaersk_alternatesellpool as string,\n\t\tmaersk_alternatesellpoolname as string,\n\t\tmaersk_bookingnumber as string,\n\t\tmaersk_brand as string,\n\t\tmaersk_breakevenpricealtpool as decimal(38,18),\n\t\tmaersk_breakevenpricepool as decimal(38,18),\n\t\tmaersk_carriername as string,\n\t\tmaersk_cdsdestination as string,\n\t\tmaersk_cdsdestinationname as string,\n\t\tmaersk_clientname as string,\n\t\tmaersk_consigneename as string,\n\t\tmaersk_consigneescvcode as string,\n\t\tmaersk_containertosaleid as string,\n\t\tmaersk_datahash as string,\n\t\tmaersk_destinationarrivaldate as timestamp,\n\t\tmaersk_destinationarrivaltimeexpectedutc as timestamp,\n\t\tmaersk_destinationlocationname as string,\n\t\tmaersk_diplalocation as string,\n\t\tmaersk_diplalocationname as string,\n\t\tmaersk_dispatchby as string,\n\t\tmaersk_dispatchdate as timestamp,\n\t\tmaersk_dropnumber as string,\n\t\tmaersk_email as string,\n\t\tmaersk_equipmentgroup as string,\n\t\tmaersk_equipmentowntype as string,\n\t\tmaersk_evaccostaltpool as decimal(38,18),\n\t\tmaersk_evacostpool as decimal(38,18),\n\t\tmaersk_haulagetype as integer,\n\t\tmaersk_isallocated as boolean,\n\t\tmaersk_lastmothervesselarrivaltime as timestamp,\n\t\tmaersk_lastmothervesseldestinationlocation as string,\n\t\tmaersk_lastmothervesseldestinationlocationname as string,\n\t\tmaersk_lastraildestination as string,\n\t\tmaersk_lastraildestinationname as string,\n\t\tmaersk_name as string,\n\t\tmaersk_nextcarriername as string,\n\t\tmaersk_nextwonumber as string,\n\t\tmaersk_pool as string,\n\t\tmaersk_poolallocatedto as string,\n\t\tmaersk_poolallocatedtoname as string,\n\t\tmaersk_poolname as string,\n\t\tmaersk_primarycompositekey as string,\n\t\tmaersk_productionyear as string,\n\t\tmaersk_railcombo as boolean,\n\t\tmaersk_region as string,\n\t\tmaersk_regpool as string,\n\t\tmaersk_regpoolname as string,\n\t\tmaersk_shipmentid as string,\n\t\tmaersk_truckcarriername as string,\n\t\tmaersk_type as string,\n\t\tmaersk_week as integer,\n\t\tmaersk_weekloc as string,\n\t\tmaersk_wonumber as string,\n\t\tmodifiedby as string,\n\t\tmodifiedbyname as string,\n\t\tmodifiedbyyominame as string,\n\t\tmodifiedon as timestamp,\n\t\tmodifiedonbehalfby as string,\n\t\tmodifiedonbehalfbyname as string,\n\t\tmodifiedonbehalfbyyominame as string,\n\t\toverriddencreatedon as timestamp,\n\t\townerid as string,\n\t\towneridname as string,\n\t\towneridtype as string,\n\t\towneridyominame as string,\n\t\towningbusinessunit as string,\n\t\towningteam as string,\n\t\towninguser as string,\n\t\tstatecode as integer,\n\t\tstatuscode as integer,\n\t\ttimezoneruleversionnumber as integer,\n\t\tutcconversiontimezonecode as integer,\n\t\tversionnumber as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['potentialcontainertosell']) ~> dataversedata\nStagingBlobPotentialContainerToSell derive(container_id = trim(toString(byName('container_id'))),\n\t\tdrop_number = trim(toString(byName('drop_number'))),\n\t\tconsignee_scv_code = trim(toString(byName('consignee_scv_code'))),\n\t\tpool_id = trim(toString(byName('pool_id'))),\n\t\treg_pool = trim(toString(byName('reg_pool'))),\n\t\teqpno = trim(toString(byName('eqpno'))),\n\t\tlast_mother_vessel_arrival_time = toTimestamp(byName('last_mother_vessel_arrival_time')),\n\t\tlast_mother_vessel_destination_location_id = trim(toString(byName('last_mother_vessel_destination_location_id'))),\n\t\tplace_of_delivery_location_id = trim(toString(byName('place_of_delivery_location_id'))),\n\t\tdestination_arrival_time_utc_expected = toTimestamp(byName('destination_arrival_time_utc_expected')),\n\t\tshipment_id = trim(toString(byName('shipment_id'))),\n\t\tbooking_number = trim(toString(byName('booking_number'))),\n\t\tbrand = trim(toString(byName('brand'))),\n\t\tequipment_group = trim(toString(byName('equipment_group'))),\n\t\tproduction_year = trim(toString(byName('production_year'))),\n\t\tequipment_own_type = trim(toString(byName('equipment_own_type'))),\n\t\tdestination_arrival_date = toTimestamp(byName('destination_arrival_date')),\n\t\tdipla_location_id = trim(toString(byName('dipla_location_id'))),\n\t\tdipla_location_name = trim(toString(byName('dipla_location_name'))),\n\t\tdestination_location_name = trim(toString(byName('destination_location_name'))),\n\t\tconsignee_name = trim(toString(byName('consignee_name'))),\n\t\tlast_rail_dest = trim(toString(byName('last_rail_dest'))),\n\t\tcarrier_name = trim(toString(byName('carrier_name'))),\n\t\tnext_wonumber = trim(toString(byName('next_wonumber'))),\n\t\tnext_carrier_name = trim(toString(byName('next_carrier_name'))),\n\t\twonumber = trim(toString(byName('wonumber'))),\n\t\trail_combo = toBoolean(case(upper(trim(toString(byName('rail_combo'))))=='TRUE',\"1\",\"0\")),\n\t\two_number = trim(toString(byName('wo_number'))),\n\t\ttruck_carrier_name = trim(toString(byName('truck_carrier_name'))),\n\t\tcds_dest = trim(toString(byName('cds_dest'))),\n\t\tregion = trim(toString(byName('region'))),\n\t\talternate_sell_location = trim(toString(byName('alternate_sell_location'))),\n\t\talternate_sell_pool = trim(toString(byName('alternate_sell_pool'))),\n\t\tbreak_even_price_pool = toDouble(trim(toString(byName('break_even_price_pool')))),\n\t\tbreak_even_price_alt_pool = toDouble(trim(toString(byName('break_even_price_alt_pool')))),\n\t\tweek = toInteger(trim(toString(byName('week')))),\n\t\thaulage_type = case(trim(toString(byName('haulage_type')))=='Carrier Haulage',379430000,\r\n    case(trim(toString(byName('haulage_type')))=='Merchant Haulage',379430001)),\n\t\tpool_allocated_to = trim(toString(byName('pool_allocated_to'))),\n\t\tallocation_date = toTimestamp(byName('allocation_date')),\n\t\tallocated_by = trim(toString(byName('allocated_by'))),\n\t\tallocated_by_algorithm = toBoolean(case(upper(trim(toString(byName('allocated_by_algorithm'))))=='TRUE',\"1\",\"0\")),\n\t\tdispatch_date = toTimestamp(byName('dispatch_date')),\n\t\tdispatch_by = trim(toString(byName('dispatch_by'))),\n\t\tweek_loc = trim(toString(byName('week_loc'))),\n\t\tis_allocated = toBoolean(case(upper(trim(toString(byName('is_allocated'))))=='TRUE',\"1\",\"0\")),\n\t\tclient_name = trim(toString(byName('client_name'))),\n\t\taddress = trim(toString(byName('address'))),\n\t\temail = trim(toString(byName('email'))),\n\t\ttype = trim(toString(byName('type'))),\n\t\tevac_cost_pool = toDecimal(trim(toString(byName('evac_cost_pool')))),\n\t\tevac_cost_alt_pool = toDecimal(trim(toString(byName('evac_cost_alt_pool')))),\n\t\tprimary_composite_key = trim(toString(byName('primary_composite_key')))) ~> DataTransformation\nDataTransformation, sitedatafromblob lookup(dipla_location_id == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDiplaLocationId\nLookupDiplaLocationId select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\tpool_id,\n\t\treg_pool,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tlast_mother_vessel_destination_location_id,\n\t\tplace_of_delivery_location_id,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tlast_rail_dest,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tcds_dest,\n\t\tregion,\n\t\talternate_sell_location,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id = maersk_siteid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDiplaLocation\nSelectDiplaLocation, sitedatafromblob lookup(last_rail_dest == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupLastRailDestination\nLookupLastRailDestination select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\tpool_id,\n\t\treg_pool,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tlast_mother_vessel_destination_location_id,\n\t\tplace_of_delivery_location_id,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tcds_dest,\n\t\tregion,\n\t\talternate_sell_location,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest = maersk_siteid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLastRailDestination\nSelectLastRailDestination, sitedatafromblob lookup(cds_dest == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCDSDestination\nLookupCDSDestination select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\tpool_id,\n\t\treg_pool,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tlast_mother_vessel_destination_location_id,\n\t\tplace_of_delivery_location_id,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\talternate_sell_location,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest = maersk_siteid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCDSDestination\nSelectCDSDestination, sitedatafromblob lookup(last_mother_vessel_destination_location_id == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupLastMotherVesselDestinationLocation\nLookupLastMotherVesselDestinationLocation select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\tpool_id,\n\t\treg_pool,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tplace_of_delivery_location_id,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\talternate_sell_location,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id = maersk_siteid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLastMotherVesselDestinationLocation\nSelectLastMotherVesselDestinationLocation, sitedatafromblob lookup(alternate_sell_location == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupAlternateSellLocation\nLookupAlternateSellLocation select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\tpool_id,\n\t\treg_pool,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tplace_of_delivery_location_id,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id,\n\t\talternate_sell_location = maersk_siteid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAlternateSellLocation\nSelectPlaceOfDeliveryLocation, pooldatafromblob lookup(pool_id == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupPool\nLookupPool select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\treg_pool,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id,\n\t\talternate_sell_location,\n\t\tplace_of_delivery_location_id,\n\t\tpool_id = maersk_poolid,\n\t\tpoolcode = maersk_poolcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPool\nSelectPool, pooldatafromblob lookup(reg_pool == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupRegPool\nLookupRegPool select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id,\n\t\talternate_sell_location,\n\t\tplace_of_delivery_location_id,\n\t\tpool_id,\n\t\treg_pool = maersk_poolid,\n\t\tpoolcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRegPool\nSelectRegPool, pooldatafromblob lookup(alternate_sell_pool == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupAlternateSellPool\nLookupAlternateSellPool select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id,\n\t\talternate_sell_location,\n\t\tplace_of_delivery_location_id,\n\t\tpool_id,\n\t\treg_pool,\n\t\talternate_sell_pool = maersk_poolid,\n\t\tpoolcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAlternateSellPool\nSelectPoolAllocatedTo derive(checksum = sha1(columns())) ~> Checksum\nChecksum, SelectNecessaryColumnsFromDataverse join(container_id == maersk_name,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> RelateTwoDataset\nFilterRowsWihAllocatedDatePopulated filter(true()) ~> FilterNewRows\nFilterNewRows select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id,\n\t\talternate_sell_location,\n\t\tplace_of_delivery_location_id,\n\t\tpool_id,\n\t\treg_pool,\n\t\talternate_sell_pool,\n\t\tpool_allocated_to,\n\t\tchecksum,\n\t\tpoolcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumns\ndataversedata select(mapColumn(\n\t\tmaersk_allocateddeallocateddate,\n\t\tmaersk_datahash,\n\t\tmaersk_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNecessaryColumnsFromDataverse\nRelateTwoDataset filter(true()) ~> FilterRowsWihAllocatedDatePopulated\nSelectAlternateSellLocation, sitedatafromblob lookup(place_of_delivery_location_id == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupPlaceOfDeliveryLocation\nLookupPlaceOfDeliveryLocation select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\tpool_id,\n\t\treg_pool,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\talternate_sell_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tpool_allocated_to,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id,\n\t\talternate_sell_location,\n\t\tplace_of_delivery_location_id = maersk_siteid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPlaceOfDeliveryLocation\nSelectAlternateSellPool, pooldatafromblob lookup(pool_allocated_to == maersk_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupPoolAllocatedTo\nLookupPoolAllocatedTo select(mapColumn(\n\t\tcontainer_id,\n\t\tdrop_number,\n\t\tconsignee_scv_code,\n\t\teqpno,\n\t\tlast_mother_vessel_arrival_time,\n\t\tdestination_arrival_time_utc_expected,\n\t\tshipment_id,\n\t\tbooking_number,\n\t\tbrand,\n\t\tequipment_group,\n\t\tproduction_year,\n\t\tequipment_own_type,\n\t\tdestination_arrival_date,\n\t\tdipla_location_name,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tcarrier_name,\n\t\tnext_wonumber,\n\t\tnext_carrier_name,\n\t\twonumber,\n\t\trail_combo,\n\t\two_number,\n\t\ttruck_carrier_name,\n\t\tregion,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\tweek,\n\t\thaulage_type,\n\t\tallocation_date,\n\t\tallocated_by,\n\t\tallocated_by_algorithm,\n\t\tdispatch_date,\n\t\tdispatch_by,\n\t\tweek_loc,\n\t\tis_allocated,\n\t\tclient_name,\n\t\taddress,\n\t\temail,\n\t\ttype,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tprimary_composite_key,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tcds_dest,\n\t\tlast_mother_vessel_destination_location_id,\n\t\talternate_sell_location,\n\t\tplace_of_delivery_location_id,\n\t\tpool_id,\n\t\treg_pool,\n\t\talternate_sell_pool,\n\t\tpool_allocated_to = maersk_poolid,\n\t\tpoolcode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPoolAllocatedTo\nSelectRequiredColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IntermediateBlobPotentialcontainerstosell"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		}
	]
}