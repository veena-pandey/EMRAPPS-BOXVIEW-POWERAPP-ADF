{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Boxview-datafactory-dev"
		},
		"CSS Intermodal Container Trigger_properties_Intermodal Potential Containers To Deliver Dataverse Pipeline_parameters_ForceFullDatasetRefresh": {
			"type": "bool",
			"defaultValue": false
		},
		"CSS Potential Container Trigger_properties_Potential Container To Sell Dataverse Pipeline_parameters_ForceFullDatasetRefresh": {
			"type": "bool",
			"defaultValue": false
		},
		"CSS Potential Container Trigger_properties_Potential Container To Sell Dataverse Pipeline_parameters_ForceUIInputOverride": {
			"type": "bool",
			"defaultValue": false
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Intermodal Potential Containers To Deliver ADLS_writeback Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADLS_writeback",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export IntermodalPotential Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Intermodal_Potential_Container_Data_To_ADLS_writeback",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DataverseData": {},
									"CopytoADLS": {
										"environment": {
											"value": "@pipeline().globalParameters.EnvironmentType",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Export IntermodalPotential Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch >\n  <entity name=\"maersk_intermodalcontainer\">\n    <attribute name=\"maersk_intermodalcontainerid\" />\n<attribute name=\"maersk_name\" />\n<attribute name=\"maersk_allocationdate\" />\n<attribute name=\"maersk_cssdiplalocation\" />\n<attribute name=\"maersk_cssdiplalocationname\" />\n<attribute name=\"maersk_bookingnumber\" />\n<attribute name=\"maersk_dropnumber\" />\n<attribute name=\"maersk_destinationlocationid\" />\n<attribute name=\"maersk_destinationlocationname\" />\n<attribute name=\"maersk_consigneename\" />\n<attribute name=\"maersk_region\" />\n<attribute name=\"maersk_csslastraildestination\" />\n<attribute name=\"maersk_returnclientname\" />\n<attribute name=\"maersk_returnclientaddress\" />\n<attribute name=\"maersk_returnclientemail\" />\n<attribute name=\"maersk_productionyear\" />\n<attribute name=\"maersk_equipmentgroup\" />\n<attribute name=\"maersk_consigneescvcode\" />\n<attribute name=\"maersk_type\" />\n<attribute name=\"maersk_weekloc\" />\n<attribute name=\"maersk_evaccostpool\" />\n<attribute name=\"maersk_evaccostaltpool\" />\n<attribute name=\"maersk_breakevenpricepool\" />\n<attribute name=\"maersk_breakevenpricealtpool\" />\n<attribute name=\"maersk_action\" />\n<attribute name=\"maersk_standardcomment\" />\n<attribute name=\"maersk_caseid\" />\n<attribute name=\"maersk_wonumber\" />\n<attribute name=\"maersk_disposeddateonfirmedbycustomer\" />\n<attribute name=\"maersk_portentrycountry\" />\n<attribute name=\"maersk_dispatcherapmid\" />\n<attribute name=\"maersk_expectedcontainersaleslocationid\" />\n<attribute name=\"maersk_lastmothervesselarrivaltime\" />\n<attribute name=\"maersk_estimatedstatusofdelivery\" />\n<attribute name=\"maersk_move\" />\n<attribute name=\"maersk_movetimestamp\" />\n<attribute name=\"maersk_cssmovelocationid\" />\n    <filter type=\"and\">\n      <condition attribute=\"statecode\" operator=\"eq\" value=\"0\" />\n    </filter>\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Intermodal_Container",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"environment": {
						"type": "String",
						"defaultValue": "datalake-dev"
					},
					"datafolderpath": {
						"type": "String",
						"defaultValue": "/ontology/foundry/models/boxview_apps/intermodal_potential_containers_to_deliver/data"
					},
					"sourcefolderpath": {
						"type": "String"
					},
					"currentfolderpath": {
						"type": "String"
					},
					"maxlastmodified": {
						"type": "String"
					},
					"finaldatafolderpath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CSS"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-17T05:13:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Intermodal Potential Containers To Deliver Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Intermodal_Potential_Container Data To Blob_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export IntermodalPotential Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Intermodal_Potential_Container Data To Blob",
								"type": "DataFlowReference",
								"parameters": {
									"ForceFullRefresh": {
										"value": "@pipeline().parameters.ForceFullDatasetRefresh",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"StagingBlobIntermodelPotentialContainerDataToDeliver": {},
									"dataversedata": {},
									"IntermediateBlobIntermodalpotentialcontainerstodeliver": {},
									"IntermediateBlobOldrecords": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Intermodalpotential Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Old records Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "intermodal_potential_containers_to_deliver",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_IntermodalPotentialContainerToDeliver",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainertodeliver_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Staging Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainertodeliver_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Export IntermodalPotential Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Intermodalpotential Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch mapping=\"logical\" distinct=\"false\">\n  <entity name=\"maersk_intermodalcontainer\">\n    <attribute name=\"maersk_intermodalcontainerid\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_datahash\" />\n    <attribute name=\"statecode\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "maersk_intermodalcontainerid",
											"type": "Guid"
										},
										"sink": {
											"name": "maersk_intermodalcontainerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "maersk_name",
											"type": "String"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "maersk_datahash",
											"type": "String"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "Int32"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "boxview_Intermodal_Container",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Intermodalpotentialcontainerstodeliver to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_containeridkey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "allocation_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_allocationdate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dipla_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocationname"
										}
									},
									{
										"source": {
											"name": "booking_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_bookingnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "drop_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dropnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "destination_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_destinationlocationid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "destination_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_destinationlocationname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_returnclientname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_client_address",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_returnclientaddress",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_client_email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_returnclientemail",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "production_year",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_productionyear",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "equipment_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentgroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_scv_code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneescvcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "week_loc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_weekloc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "evac_cost_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_evaccostpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "evac_cost_alt_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_evaccostaltpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "break_even_price_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricepool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "break_even_price_alt_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricealtpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "expected_container_sales_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_expectedcontainersaleslocationid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "last_mother_vessel_arrival_time",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_lastmothervesselarrivaltime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "estimated_status_of_delivery",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_estimatedstatusofdelivery",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "move",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_move",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "move_timestamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_movetimestamp",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dipla_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocation"
										}
									},
									{
										"source": {
											"name": "last_rail_dest",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csslastraildestination"
										}
									},
									{
										"source": {
											"name": "move_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssmovelocationid"
										}
									},
									{
										"source": {
											"name": "checksum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "country_of_port_entry",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_portentrycountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "statecode"
										},
										"sink": {
											"name": "statecode"
										}
									},
									{
										"source": {
											"name": "container_id"
										},
										"sink": {
											"name": "maersk_name"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Intermodal_Container",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLActions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "action",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Actions",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_GateBuyActions_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLNumber",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "drop_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Number",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_DropNumber_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLDestinationLocationID",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "destination_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_DestinationLocationID_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLMove",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "move",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Move",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_Move_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Distinct Values",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopytoSQLActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLDestinationLocationID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLMove",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLCountryOfPortEntry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CSS_IntermodalContainer_GetDistinctValues]"
						},
						"linkedServiceName": {
							"referenceName": "boxview_asql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopytoSQLCountryOfPortEntry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country_of_port_entry",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryCode",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_CountryOfPortEntry_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "IntermodalpotentialcontainerOldRecords",
						"description": "Update the status = inactive for old records in dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerOldRecords",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_containeridkey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontaineroldrecords_intermediate",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Intermodal_Container",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Intermediate Old records Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontaineroldrecords_intermediate",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ForceFullDatasetRefresh": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"variables": {
					"environment": {
						"type": "String",
						"defaultValue": "datalake-dev"
					},
					"datafolderpath": {
						"type": "String",
						"defaultValue": "/ontology/foundry/models/boxview_apps/intermodal_potential_containers_to_deliver/data"
					},
					"sourcefolderpath": {
						"type": "String"
					},
					"currentfolderpath": {
						"type": "String"
					},
					"maxlastmodified": {
						"type": "String"
					},
					"finaldatafolderpath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CSS"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T07:26:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PMT Price Table WriteBack_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Staging Data",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Blob_PMT_Pricedata_Stage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy data to Blob Stage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "price_table_pre_price_mgmt_tool ",
								"queryTimeout": "00:10:00",
								"noTruncation": true
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_Pricetable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_PMT_Pricedata_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow to ADLS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data to Blob Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PMT_price_table_adls_writeback",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StageBlobPMTPricedata": {},
									"SQLPMTPricedata": {},
									"ADLS": {
										"environment": {
											"value": "@pipeline().globalParameters.EnvironmentType",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SQL-Sync"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T02:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PMT_Price_Table_ADX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PMTPriceTable Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "price_table_pre_price_mgmt_tool",
								"queryTimeout": "00:10:00",
								"noTruncation": true
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country_cd",
											"type": "String"
										},
										"sink": {
											"name": "country_cd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site_code",
											"type": "String"
										},
										"sink": {
											"name": "site_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price_category",
											"type": "String"
										},
										"sink": {
											"name": "price_category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "Int32"
										},
										"sink": {
											"name": "price",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "price_compare_at",
											"type": "Int32"
										},
										"sink": {
											"name": "price_compare_at",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "minimum_price_sales_manager",
											"type": "Int32"
										},
										"sink": {
											"name": "minimum_price_sales_manager",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "minimum_price_regional_manager",
											"type": "Int32"
										},
										"sink": {
											"name": "minimum_price_regional_manager",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "minimum_price_hq",
											"type": "Int32"
										},
										"sink": {
											"name": "minimum_price_hq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "surcharge_value",
											"type": "Int32"
										},
										"sink": {
											"name": "surcharge_value",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "key_from_inventory",
											"type": "String"
										},
										"sink": {
											"name": "key_from_inventory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "edited_at_level",
											"type": "String"
										},
										"sink": {
											"name": "edited_at_level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "edited_timestamp",
											"type": "String"
										},
										"sink": {
											"name": "edited_timestamp",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "edited_by",
											"type": "String"
										},
										"sink": {
											"name": "edited_by",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "pool_id",
											"type": "String"
										},
										"sink": {
											"name": "pool_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site",
											"type": "String"
										},
										"sink": {
											"name": "site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "allowed_for_sale",
											"type": "String"
										},
										"sink": {
											"name": "allowed_for_sale",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "area",
											"type": "String"
										},
										"sink": {
											"name": "area",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "team_name",
											"type": "String"
										},
										"sink": {
											"name": "team_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_dsc",
											"type": "String"
										},
										"sink": {
											"name": "country_dsc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "regional_manager_dry",
											"type": "String"
										},
										"sink": {
											"name": "regional_manager_dry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "regional_manager_reefer",
											"type": "String"
										},
										"sink": {
											"name": "regional_manager_reefer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sales_manager_dry",
											"type": "String"
										},
										"sink": {
											"name": "sales_manager_dry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sales_manager_reefer",
											"type": "String"
										},
										"sink": {
											"name": "sales_manager_reefer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sales_operations",
											"type": "String"
										},
										"sink": {
											"name": "sales_operations",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_service",
											"type": "String"
										},
										"sink": {
											"name": "customer_service",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sales_manager_backup",
											"type": "String"
										},
										"sink": {
											"name": "sales_manager_backup",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_Pricetable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_PMT_Pricedata_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy to sql stage",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PMTPriceTable Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PMT_price_table_adx",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StageBlobPMTPricedata": {},
									"ASQLPmtPriceTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "sp_mergedata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy to sql stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PMT_PriceTable_Mergedata]"
						},
						"linkedServiceName": {
							"referenceName": "boxview_asql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete Staging Data",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Blob_PMT_Pricedata_Stage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SQL-Sync"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-17T04:59:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pool Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Site Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load Pool Data To Blob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingBlobSite": {},
									"CountryBlob": {},
									"IntermediateBlobPool": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete Staging Data folder from blob",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_site_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Site Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Data folder from blob",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "site",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "loc_cd",
											"type": "String"
										},
										"sink": {
											"name": "loc_cd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "site_type",
											"type": "String"
										},
										"sink": {
											"name": "site_type",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "loc_dsc",
											"type": "String"
										},
										"sink": {
											"name": "loc_dsc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "country_cd",
											"type": "String"
										},
										"sink": {
											"name": "country_cd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "country_dsc",
											"type": "String"
										},
										"sink": {
											"name": "country_dsc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "city_cd",
											"type": "String"
										},
										"sink": {
											"name": "city_cd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "city_dsc",
											"type": "String"
										},
										"sink": {
											"name": "city_dsc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cluster_cd",
											"type": "String"
										},
										"sink": {
											"name": "cluster_cd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cluster_dsc",
											"type": "String"
										},
										"sink": {
											"name": "cluster_dsc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "region_cd",
											"type": "String"
										},
										"sink": {
											"name": "region_cd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "region_dsc",
											"type": "String"
										},
										"sink": {
											"name": "region_dsc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "pool_cd",
											"type": "String"
										},
										"sink": {
											"name": "pool_cd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "pool_dsc",
											"type": "String"
										},
										"sink": {
											"name": "pool_dsc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "lopsc_cd",
											"type": "String"
										},
										"sink": {
											"name": "lopsc_cd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "lopsc_dsc",
											"type": "String"
										},
										"sink": {
											"name": "lopsc_dsc",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "Double"
										},
										"sink": {
											"name": "lat",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "lon",
											"type": "Double"
										},
										"sink": {
											"name": "lon",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "email_address",
											"type": "String"
										},
										"sink": {
											"name": "email_address",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String"
										},
										"sink": {
											"name": "phone",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "contact_person",
											"type": "String"
										},
										"sink": {
											"name": "contact_person",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "address_1",
											"type": "String"
										},
										"sink": {
											"name": "address_1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "address_2",
											"type": "String"
										},
										"sink": {
											"name": "address_2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "address_3",
											"type": "String"
										},
										"sink": {
											"name": "address_3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "postal_code",
											"type": "String"
										},
										"sink": {
											"name": "postal_code",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "city_name",
											"type": "String"
										},
										"sink": {
											"name": "city_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "local_tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "local_tax",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "global_tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "global_tax",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "eu_tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "eu_tax",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "state_province_name",
											"type": "String"
										},
										"sink": {
											"name": "state_province_name",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "sales_manager_dry",
											"type": "String"
										},
										"sink": {
											"name": "sales_manager_dry",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "sales_manager_reefer",
											"type": "String"
										},
										"sink": {
											"name": "sales_manager_reefer",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "customer_service",
											"type": "String"
										},
										"sink": {
											"name": "customer_service",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "sales_operations",
											"type": "String"
										},
										"sink": {
											"name": "sales_operations",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_Site",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_site_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Pool data to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "pool",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_poolnamekey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "maersk_poolcode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_poolcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "maersk_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "maersk_country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_country",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "maersk_pooldescription"
										},
										"sink": {
											"name": "maersk_pooldescription"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_pool_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Pool",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_pool_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Exported Pool Data",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Pool data to Dataverse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_pool_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Pool data to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Exported Pool Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch>\n  <entity name=\"maersk_pool\" >\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_poolcode\" />\n    <attribute name=\"maersk_poolid\" />\n    <attribute name=\"maersk_pooldescription\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Pool",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_pool_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-03T13:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Potential Container To Sell ADLS_writeback Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADLSWriteback",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export PotentialContainer Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Potential_Container_To_Sell_Data_To_ADLS_writeback",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Dataversedata": {},
									"CopytoADLS": {
										"environment": {
											"value": "@pipeline().globalParameters.EnvironmentType",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Export PotentialContainer Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Potential_Container_To_Sell",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_potentialcontainertosell_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CSS"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-17T04:59:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Potential Container To Sell Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export PotentialContainer Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Potential_Container_To_Sell Data To Blob",
								"type": "DataFlowReference",
								"parameters": {
									"ForceFullRefresh": {
										"value": "@pipeline().parameters.ForceFullDatasetRefresh",
										"type": "Expression"
									},
									"ForceUIOverride": {
										"value": "@pipeline().parameters.ForceUIInputOverride",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"StagingBlobPotentialContainerToSell": {},
									"dataversedata": {},
									"IntermediateBlobPotentialcontainerstosell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PotentialContainer Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "potential_containers_to_sell_hubble",
								"queryTimeout": "00:10:00",
								"noTruncation": true
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_PotentialContainerToSell",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_potentialcontainertosell_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Staging Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Export PotentialContainer Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "PotentialContainer Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch >\n  <entity name=\"maersk_containertosale\">\n    <attribute name=\"maersk_containertosaleid\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_datahash\" />\n    <attribute name=\"maersk_allocateddeallocateddate\" />\n    <order attribute=\"maersk_allocateddeallocateddate\" descending=\"true\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "maersk_containertosaleid",
											"type": "Guid"
										},
										"sink": {
											"name": "maersk_containertosaleid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "maersk_name",
											"type": "String"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "maersk_allocateddeallocateddate",
											"type": "DateTime"
										},
										"sink": {
											"name": "maersk_allocateddeallocateddate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "maersk_datahash",
											"type": "String"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "boxview_Potential_Container_To_Sell",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_potentialcontainertosell_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Potential Container To Sell data to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_containeridkey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "container_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "drop_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dropnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_scv_code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneescvcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "last_mother_vessel_arrival_time",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_lastmothervesselarrivaltime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "destination_arrival_time_utc_expected",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_destinationarrivaltimeexpectedutc",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "shipment_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_shipmentid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "booking_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_bookingnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "equipment_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentgroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "production_year",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_productionyear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "equipment_own_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentowntype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "destination_arrival_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_destinationarrivaldate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dipla_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocationname"
										}
									},
									{
										"source": {
											"name": "destination_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_destinationlocationname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "carrier_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_carriername",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "next_wonumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_nextwonumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "next_carrier_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_nextcarriername",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "wonumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_wonumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rail_combo",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_railcombo",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "truck_carrier_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_truckcarriername",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "break_even_price_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricepool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "break_even_price_alt_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricealtpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "week",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_week",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "haulage_type",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_haulagetype",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "allocation_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_allocationdate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "allocated_by",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_allocatedby",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "allocated_by_algorithm",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_allocatedbyalgorythm",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "dispatch_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_dispatchdate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dispatch_by",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dispatchby",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "week_loc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_weekloc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_allocated",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isallocated",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_clientname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_address",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "evac_cost_pool",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										},
										"sink": {
											"name": "maersk_evacostpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "evac_cost_alt_pool",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										},
										"sink": {
											"name": "maersk_evaccostaltpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "primary_composite_key",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_primarycompositekey",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dipla_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocation"
										}
									},
									{
										"source": {
											"name": "last_rail_dest",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csslastraildestination"
										}
									},
									{
										"source": {
											"name": "cds_dest",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csscdsdestination"
										}
									},
									{
										"source": {
											"name": "last_mother_vessel_destination_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csslastmothervesseldestinationlocation"
										}
									},
									{
										"source": {
											"name": "alternate_sell_location",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssalternateselllocation"
										}
									},
									{
										"source": {
											"name": "place_of_delivery_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssplaceofdeliverylocation"
										}
									},
									{
										"source": {
											"name": "pool_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_poolcode"
										}
									},
									{
										"source": {
											"name": "reg_pool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssregpool"
										}
									},
									{
										"source": {
											"name": "alternate_sell_pool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssalternatesellpool"
										}
									},
									{
										"source": {
											"name": "pool_allocated_to",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csspoolallocatedto"
										}
									},
									{
										"source": {
											"name": "checksum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Potential_Container_To_Sell",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLClientName",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_ClientName_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLProductionYear",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "production_year",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_ProductionYear__Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLEquipmentGroup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "equipment_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_EquipmentGroup_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Distinct Values",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopytoSQLClientName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLProductionYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLboxviewAlternateSellPool",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLboxviewBreakEvenPrice",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLboxviewConsigneeName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CSS_ContainerToSell_GetDistinctValues]"
						},
						"linkedServiceName": {
							"referenceName": "boxview_asql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopytoSQLboxviewAlternateSellPool",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "alternate_sell_pool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_AlternateSellPool_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLboxviewBreakEvenPrice",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "break_even_price_alt_pool",
											"type": "Double"
										},
										"sink": {
											"name": "Name",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_BreakEvenPrice_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLboxviewConsigneeName",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "consignee_name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_ConsigneeName_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ForceFullDatasetRefresh": {
						"type": "bool",
						"defaultValue": false
					},
					"ForceUIInputOverride": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "CSS"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T07:26:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Potential Container To Sell Dataverse Pipeline_tableadd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export PotentialContainer Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Potential_Container_To_Sell Data To Blob",
								"type": "DataFlowReference",
								"parameters": {
									"ForceFullRefresh": {
										"value": "@pipeline().parameters.ForceFullDatasetRefresh",
										"type": "Expression"
									},
									"ForceUIOverride": {
										"value": "@pipeline().parameters.ForceUIInputOverride",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"StagingBlobPotentialContainerToSell": {},
									"dataversedata": {},
									"IntermediateBlobPotentialcontainerstosell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PotentialContainer Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "potential_containers_to_sell_hubble",
								"queryTimeout": "00:10:00",
								"noTruncation": true
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_PotentialContainerToSell",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_potentialcontainertosell_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Staging Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Export PotentialContainer Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "PotentialContainer Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch >\n  <entity name=\"maersk_containertosale\">\n    <attribute name=\"maersk_containertosaleid\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_datahash\" />\n    <attribute name=\"maersk_allocateddeallocateddate\" />\n    <order attribute=\"maersk_allocateddeallocateddate\" descending=\"true\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "maersk_containertosaleid",
											"type": "Guid"
										},
										"sink": {
											"name": "maersk_containertosaleid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "maersk_name",
											"type": "String"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "maersk_allocateddeallocateddate",
											"type": "DateTime"
										},
										"sink": {
											"name": "maersk_allocateddeallocateddate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "maersk_datahash",
											"type": "String"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "boxview_Potential_Container_To_Sell",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_potentialcontainertosell_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_potentialcontainertosell_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Potential Container To Sell data to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_containeridkey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "container_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "drop_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dropnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_scv_code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneescvcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "last_mother_vessel_arrival_time",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_lastmothervesselarrivaltime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "destination_arrival_time_utc_expected",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_destinationarrivaltimeexpectedutc",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "shipment_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_shipmentid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "booking_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_bookingnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "equipment_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentgroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "production_year",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_productionyear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "equipment_own_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentowntype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "destination_arrival_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_destinationarrivaldate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dipla_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocationname"
										}
									},
									{
										"source": {
											"name": "destination_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_destinationlocationname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "carrier_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_carriername",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "next_wonumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_nextwonumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "next_carrier_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_nextcarriername",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "wonumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_wonumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rail_combo",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_railcombo",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "truck_carrier_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_truckcarriername",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "break_even_price_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricepool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "break_even_price_alt_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricealtpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "week",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_week",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "haulage_type",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_haulagetype",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "allocation_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_allocationdate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "allocated_by",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_allocatedby",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "allocated_by_algorithm",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_allocatedbyalgorythm",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "dispatch_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_dispatchdate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dispatch_by",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dispatchby",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "week_loc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_weekloc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_allocated",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isallocated",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_clientname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_address",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "evac_cost_pool",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										},
										"sink": {
											"name": "maersk_evacostpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "evac_cost_alt_pool",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										},
										"sink": {
											"name": "maersk_evaccostaltpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "primary_composite_key",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_primarycompositekey",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dipla_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocation"
										}
									},
									{
										"source": {
											"name": "last_rail_dest",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csslastraildestination"
										}
									},
									{
										"source": {
											"name": "cds_dest",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csscdsdestination"
										}
									},
									{
										"source": {
											"name": "last_mother_vessel_destination_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csslastmothervesseldestinationlocation"
										}
									},
									{
										"source": {
											"name": "alternate_sell_location",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssalternateselllocation"
										}
									},
									{
										"source": {
											"name": "place_of_delivery_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssplaceofdeliverylocation"
										}
									},
									{
										"source": {
											"name": "pool_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_poolcode"
										}
									},
									{
										"source": {
											"name": "reg_pool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssregpool"
										}
									},
									{
										"source": {
											"name": "alternate_sell_pool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssalternatesellpool"
										}
									},
									{
										"source": {
											"name": "pool_allocated_to",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csspoolallocatedto"
										}
									},
									{
										"source": {
											"name": "checksum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Potential_Container_To_Sell",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLClientName",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_ClientName_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLProductionYear",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "production_year",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_ProductionYear__Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLEquipmentGroup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "equipment_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_EquipmentGroup_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Distinct Values",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopytoSQLClientName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLProductionYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLboxviewAlternateSellPool",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLboxviewbreakevenprice",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLboxviewConsigneeName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CSS_ContainerToSell_GetDistinctValues]"
						},
						"linkedServiceName": {
							"referenceName": "boxview_asql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopytoSQLboxviewAlternateSellPool",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "alternate_sell_pool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_AlternateSellPool_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLboxviewbreakevenprice",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "break_even_price_pool",
											"type": "Double"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_BreakEvenPrice_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopytoSQLboxviewConsigneeName",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "potentialcontainertosell",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "consignee_name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "blob_potentialcontainertosell_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_ContainerToSell_ConsigneeName_Stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ForceFullDatasetRefresh": {
						"type": "bool",
						"defaultValue": false
					},
					"ForceUIInputOverride": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "CSS"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T07:26:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product Index Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Product Index Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load Product Index Data To Blob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingBlobProductIndex": {},
									"producttypedatafromblob": {},
									"productsubtypedatafromblob": {},
									"IntermediateBlobProductIndex": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy Product Index data to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "productindex",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_productindexkeyfrominventoryekey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "product_index",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "product_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_productgroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "previous_category",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_previouscategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "size",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_size",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "product_type_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_producttypename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "subtype_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_productsubtypename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "search_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_searchname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "open_for_sale",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isopenforsale",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ignore_breakeven",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isignorebreakeven",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "price_product_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_priceproducttype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "price_category",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_pricecategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "key_from_inventory",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_keyfrominventory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "product_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_producttype",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "subtype",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_productsubtype",
											"type": "Guid"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_product_index_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Product_Index",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy ProductIndex data to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Exported data from blob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch>\n  <entity name=\"maersk_productindex\" >\n    <attribute name=\"maersk_size\" />\n    <attribute name=\"maersk_producttype\" />\n    <attribute name=\"maersk_productsubtype\" />\n    <attribute name=\"maersk_sizename\" />\n    <attribute name=\"maersk_productgroup\" />\n    <attribute name=\"maersk_productsubtypename\" />\n    <attribute name=\"maersk_previouscategory\" />\n    <attribute name=\"maersk_priceproducttype\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_productindexid\" />\n    <attribute name=\"maersk_producttypename\" />\n    <attribute name=\"maersk_pricecategory\" />\n    <attribute name=\"maersk_category\" />\n    <attribute name=\"maersk_keyfrominventory\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Product_Index",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_product_index_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Exported data from blob",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Product Index data to Dataverse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_index_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Staging data from Blob",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_index_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Product Index Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging data from Blob",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "product_matrix",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_ProductIndex",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_product_index_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_index_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-03T13:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product Sub Type Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Product Index Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load Product  Sub Type Data to Blob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingBlobProductSubType": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete Exported Data folder from blob",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Product Sub Type to Dataverse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_subtype_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Product Sub Type to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "productsubtype",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_productsubtypenamekey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "product_sub_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_product_sub_type_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Product_Subtype",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Product  SubType data to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Exported Data folder from blob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch>\n  <entity name=\"maersk_productsubtype\" >\n    <all-attributes/>\n    <attribute name=\"maersk_name\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Product_Type",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_product_subtype_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Staging data from Blob",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_index_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Product Index Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging data from Blob",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "product_matrix",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_ProductIndex",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_product_index_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_sub_type_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-03T13:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product Type Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Product Index Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load Product Type Data to Blob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingBlobProductType": {},
									"IntermediateBlobProductType": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete Exported Data folder from blob",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Product Type to Dataverse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_type_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Product Type to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "producttype",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_producttypenamekey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "product_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_product_type_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Product_Type",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Product Type data to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Exported Data folder from blob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch>\n  <entity name=\"maersk_producttype\" >\n    <all-attributes/>\n    <attribute name=\"maersk_name\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Product_Type",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_product_type_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Staging data from Blob",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_index_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Product Index Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging data from Blob",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "product_matrix",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_ProductIndex",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_product_index_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_product_type_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-03T13:56:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Region Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Country Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load Region Data To Blob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingBlobCountry": {},
									"userdatafromblob": {},
									"IntermediateBlobCountry": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete Staging Data folder from blob",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_country_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Country Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Data folder from blob",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "country",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_Country",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_country_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Region data to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "region",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_regionnamekey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "maersk_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "maersk_regioncode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_regioncode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "maersk_regionalmanagerdry",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_regionalmanagerdry",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "maersk_regionalmanagerreefer",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_regionalmanagerreefer",
											"type": "Guid"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_region_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Region",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_region_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Exported Region Data",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Region data to Dataverse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_region_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Region data to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Exported Region Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch>\n  <entity name=\"maersk_region\" >\n    <attribute name=\"maersk_regionid\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_regioncode\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Region",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_region_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-03T13:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Site Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data transformation flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Site Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load Site Data To Blob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingBlobSite": {},
									"countrydatafromblob": {},
									"pooldatafromblob": {},
									"citydatafromdataverse": {},
									"IntermediateBlobSite": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Delete Exported folder from blob",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Site data to Dataverse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_site_csp_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Site data to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data transformation flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "sitecsp",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_sitenamekey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "loc_cd",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_sitecode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "loc_dsc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_sitedescription"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "lon",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "country_dsc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_country",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "pool_dsc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_pool",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "maersk_city"
										},
										"sink": {
											"name": "maersk_city"
										}
									},
									{
										"source": {
											"name": "site_code"
										},
										"sink": {
											"name": "maersk_name"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_site_csp_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Site_CSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Site CSP data to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Exported folder from blob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch>\n  <entity name=\"maersk_site\" >\n    <attribute name=\"maersk_poolname\" />\n    <attribute name=\"maersk_sitecode\" />\n    <attribute name=\"maersk_country\" />\n    <attribute name=\"maersk_city\" />\n    <attribute name=\"maersk_siteid\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_countryname\" />\n    <attribute name=\"maersk_pool\" />\n    <attribute name=\"maersk_cityname\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Site_CSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_site_csp_exported_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Staging Data folder from blob",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_site_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy Site Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Data folder from blob",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "site",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_Site",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_site_staging_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_site_csp_intermediate_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-03T13:56:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DMRL Master Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DMRL Containers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DMRL Container dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ForceFullDatasetRefresh": {
									"value": "@pipeline().parameters.ForceDatasetRefresh",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DMRL SQL Workorders",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DMRL Containers",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DMRL Workorder SQL Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ForceFullDatasetRefresh": {
									"value": "@pipeline().parameters.ForceDatasetRefresh",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ForceDatasetRefresh": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "DMRL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master CSP Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Lookup Tables to Blob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Lookup Tables to Blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Product Sub Type data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Cluster data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Product Sub Type Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Product Type data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Product Sub Type data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Product Type Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Product Index data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Product Type data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Product Index Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Country Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Product Index data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Country Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Site Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load City data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Site Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Contact Data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Contact Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Customer Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Site Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Customer Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Equipment Inventory CSP Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Customer Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Equipment Inventory CSP dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ForceFullDatasetRefresh": {
									"value": "@pipeline().parameters.ForceFullDatasetRefresh",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Region data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Lookup Tables to Blob",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Region Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Delivery site Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Contact Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Delivery Site Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load City data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Pool data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "City Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Area data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Region data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Area Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Cluster data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Area data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Cluster Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load Pool data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Country Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pool Dataverse Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ForceFullDatasetRefresh": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-28T13:23:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Product Sub Type Dataverse Pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/Product Type Dataverse Pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/Product Index Dataverse Pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/Site Dataverse Pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/Region Dataverse Pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/Pool Dataverse Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PMT_PriceTable_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PMT_Price_Table_ADX",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PMT_Price_Table_ADX",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PMT Price Table WriteBack_ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PMT_Price_Table_ADX",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PMT Price Table WriteBack_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SQL-Sync"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PMT_Price_Table_ADX')]",
				"[concat(variables('factoryId'), '/pipelines/PMT Price Table WriteBack_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSS Intermodal Container Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Intermodal Potential Containers To Deliver Dataverse Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"ForceFullDatasetRefresh": "[parameters('CSS Intermodal Container Trigger_properties_Intermodal Potential Containers To Deliver Dataverse Pipeline_parameters_ForceFullDatasetRefresh')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-27T11:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								2,
								10,
								16
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Intermodal Potential Containers To Deliver Dataverse Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSS Intermodal Container Writeback Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Intermodal Potential Containers To Deliver ADLS_writeback Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-27T11:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								2,
								10,
								16
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Intermodal Potential Containers To Deliver ADLS_writeback Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSS Potential Container Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Potential Container To Sell Dataverse Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"ForceFullDatasetRefresh": "[parameters('CSS Potential Container Trigger_properties_Potential Container To Sell Dataverse Pipeline_parameters_ForceFullDatasetRefresh')]",
							"ForceUIInputOverride": "[parameters('CSS Potential Container Trigger_properties_Potential Container To Sell Dataverse Pipeline_parameters_ForceUIInputOverride')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-27T11:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								3,
								11,
								19
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Potential Container To Sell Dataverse Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSS Potential Container Writeback Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Potential Container To Sell ADLS_writeback Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-27T11:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								4,
								12,
								20
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Potential Container To Sell ADLS_writeback Pipeline')]"
			]
		}
	]
}