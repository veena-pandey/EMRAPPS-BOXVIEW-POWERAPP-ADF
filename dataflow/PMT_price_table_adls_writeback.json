{
	"name": "PMT_price_table_adls_writeback",
	"properties": {
		"folder": {
			"name": "PMT"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Blob_PMT_Pricedata_Stage",
						"type": "DatasetReference"
					},
					"name": "StageBlobPMTPricedata"
				},
				{
					"dataset": {
						"referenceName": "boxview_etl_pmt_price_table",
						"type": "DatasetReference"
					},
					"name": "SQLPMTPricedata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "datalake_pmt_price_table_writeback",
						"type": "DatasetReference"
					},
					"name": "ADLS"
				}
			],
			"transformations": [
				{
					"name": "Selectkeyfrominventory"
				},
				{
					"name": "GetData"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tcountry_cd as string,\n\t\tsite_code as string,\n\t\tprice_category as string,\n\t\tprice as integer,\n\t\tprice_compare_at as integer,\n\t\tminimum_price_sales_manager as integer,\n\t\tminimum_price_regional_manager as integer,\n\t\tminimum_price_hq as integer,\n\t\tsurcharge_value as integer,\n\t\tkey_from_inventory as string,\n\t\tedited_at_level as string,\n\t\tedited_timestamp as string,\n\t\tedited_by as string,\n\t\tpool_id as string,\n\t\tsite as string,\n\t\tallowed_for_sale as string,\n\t\tarea as string,\n\t\tteam_name as string,\n\t\tcountry_dsc as string,\n\t\tregional_manager_dry as string,\n\t\tregional_manager_reefer as string,\n\t\tsales_manager_dry as string,\n\t\tsales_manager_reefer as string,\n\t\tsales_operations as string,\n\t\tcustomer_service as string,\n\t\tsales_manager_backup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['pmt_pricedata']) ~> StageBlobPMTPricedata\nsource(output(\n\t\tcountry_cd as string,\n\t\tsite_code as string,\n\t\tprice_category as string,\n\t\tprice as integer,\n\t\tprice_compare_at as integer,\n\t\tminimum_price_sales_manager as integer,\n\t\tminimum_price_regional_manager as integer,\n\t\tminimum_price_hq as integer,\n\t\tsurcharge_value as integer,\n\t\tkey_from_inventory as string,\n\t\tedited_at_level as string,\n\t\tedited_timestamp as long,\n\t\tedited_by as string,\n\t\tpool_id as string,\n\t\tsite as string,\n\t\tallowed_for_sale as string,\n\t\tarea as string,\n\t\tteam_name as string,\n\t\tcountry_dsc as string,\n\t\tregional_manager_dry as string,\n\t\tregional_manager_reefer as string,\n\t\tsales_manager_dry as string,\n\t\tsales_manager_reefer as string,\n\t\tsales_operations as string,\n\t\tcustomer_service as string,\n\t\tsales_manager_backup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SQLPMTPricedata\nStageBlobPMTPricedata select(mapColumn(\n\t\tkey_from_inventory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Selectkeyfrominventory\nSelectkeyfrominventory, SQLPMTPricedata join(Selectkeyfrominventory@key_from_inventory == SQLPMTPricedata@key_from_inventory,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> GetData\nGetData derive(edited_timestamp = trim(toString(byName('edited_timestamp')))) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['price_table_price_mgmt_tool_writeback.snappy.parquet'],\n\ttruncate: true,\n\tmapColumn(\n\t\tcountry_cd,\n\t\tsite_code,\n\t\tprice_category,\n\t\tprice,\n\t\tprice_compare_at,\n\t\tminimum_price_sales_manager,\n\t\tminimum_price_regional_manager,\n\t\tminimum_price_hq,\n\t\tsurcharge_value,\n\t\tkey_from_inventory = SQLPMTPricedata@key_from_inventory,\n\t\tedited_at_level,\n\t\tedited_timestamp,\n\t\tedited_by,\n\t\tpool_id,\n\t\tsite,\n\t\tallowed_for_sale,\n\t\tarea,\n\t\tteam_name,\n\t\tcountry_dsc,\n\t\tregional_manager_dry,\n\t\tregional_manager_reefer,\n\t\tsales_manager_dry,\n\t\tsales_manager_reefer,\n\t\tsales_operations,\n\t\tcustomer_service,\n\t\tsales_manager_backup\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ADLS"
		}
	}
}