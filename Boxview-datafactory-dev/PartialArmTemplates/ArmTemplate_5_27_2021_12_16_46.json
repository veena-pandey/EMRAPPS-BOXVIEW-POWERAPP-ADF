{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Boxview-datafactory-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Equipment Inventory CSP dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow for transformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export EquipmentInventory Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load EquipmentInventory Data To Blob",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy equipment_inventory CSP to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data flow for transformation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "equipmentinventorycsp",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_equipmentkey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "eqpno",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "move_timestamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_movetimestamp",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "move",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_move",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "previous_move",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_previousmove",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "actfor",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_actfor",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "stempty",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isempty",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "subtype",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_productsubtype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "operator_code",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_operatorcode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "damage_code",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_damagecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "bill_of_lading_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_billofladingnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "booking_reference",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_bookingreference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "longstanding_days",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_longstandingdays",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actloc_short",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_actloc_short",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pre_trip_inspection_status",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_pretripinspectionstatus",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "year_of_make",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_yearofmake",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "infleet_year",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_infleetyear",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "machinery_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_machinerytype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "leasing_contract",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_leasingcontract",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "leasing_company",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_leasingcompany",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "release_free_time",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_releasefreetime",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "allowed_for_sale",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_allowedforsale",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "merc_mode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_mercmode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "repair_estimate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_repairestimate",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "eqioflt",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_eqioflt",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "equipment_reefer_type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentreefertype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "current_loc_dsc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_current_loc_dsc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "age_normal",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_agenormal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "is_pass_through",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_ispassthrough",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "level_3_size",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_size",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ignore_breakeven",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_ignorebreakevenprice",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Evacuation_cost_per_box",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_evacuationcostperbox",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "emr_unit_cost",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_emrunitcosts",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "cherry_picking_fee",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_cherrypickingfee",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "move_timestamp_gate_buy",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_move_timestamp_gate_buy",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "inventory_type",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_inventorytype",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "gate_buy_gate_in_done",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_gatebuygateindone",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "sales_move_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_salesmovedate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "discharge_site",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dischargesite",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "discharge_port_to_display",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_discharge_port_to_display",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "load_port_to_display",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_load_port_to_display",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "last_move_from_fast_track",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_last_move_from_fast_track",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "key_to_price",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_keytoprice",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "price_category_from_price",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_pricecategoryfromprice",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sales_price",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_salesprice",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "price_to_compare",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_pricetocompare",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "sales_manager_minimum_price",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_salesmanagerminprice",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "regional_manager_minimum_price",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_regionalmanagerminprice",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "headquarter_minimum_price",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_hqminprice",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "sales_manager_dry",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_salesmanagerdry",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "sales_manager_reefer",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_salesmanagerreefer",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "regional_manager_dry",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_regionalmanagerdry",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "regional_manager_reefer",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_regionalmanagerreefer",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "teamid",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_team",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "load_countryid",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_loadcountry",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "discharge_countryid",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dischargecountry",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "repair_country_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_repaircountry",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "repair_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_repairlocation",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "current_country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_currentcountry",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "current_site",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_currentsite",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "current_pool",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_currentpool",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "product_index",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_productindex",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "client",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_client",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "key_to_product",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_keytoproduct",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "checksum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "area",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_area",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "arearegion",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_region",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "break_even_price"
										},
										"sink": {
											"name": "maersk_minsalesprice"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_equipment_inventory_csp_intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Boxview_container",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy EquipmentInventory Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "equipment_inventory",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_EquipmentInventoryCSP",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_equipment_inventory_csp_staging_data",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Delete Staging Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_equipment_inventory_csp_staging_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_equipment_inventory_csp_intermediate_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Export EquipmentInventory Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy EquipmentInventory Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch >\n  <entity name=\"maersk_container\" >\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_containerid\" />\n    <attribute name=\"maersk_datahash\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Boxview_container",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_equipment_inventory_csp_exported_data",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_equipment_inventory_csp_exported_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "CSP"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-10T09:56:41Z"
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Intermodal Potential Containers To Deliver Dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Intermodal_Potential_Container Data To Blob_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export IntermodalPotential Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Intermodal_Potential_Container Data To Blob",
								"type": "DataFlowReference",
								"parameters": {
									"ForceFullRefresh": {
										"value": "@pipeline().parameters.ForceFullDatasetRefresh",
										"type": "Expression"
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Intermodalpotential Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "intermodal_potential_containers_to_deliver",
								"queryTimeout": "00:10:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_IntermodalPotentialContainerToDeliver",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainertodeliver_staging_data",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Delete Staging Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainertodeliver_staging_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Export IntermodalPotential Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Intermodalpotential Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch mapping=\"logical\" distinct=\"false\">\n  <entity name=\"maersk_intermodalcontainer\">\n    <attribute name=\"maersk_intermodalcontainerid\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_datahash\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_Intermodal_Container",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_exported_data",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_exported_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Intermodalpotentialcontainerstodeliver to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_containeridkey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "container_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "allocation_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_allocationdate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dipla_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocationname"
										}
									},
									{
										"source": {
											"name": "booking_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_bookingnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "drop_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dropnumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "destination_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_destinationlocationid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "destination_location_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_destinationlocationname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_client_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_returnclientname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_client_address",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_returnclientaddress",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "return_client_email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_returnclientemail",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "production_year",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_productionyear",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "equipment_group",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentgroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "consignee_scv_code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_consigneescvcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "week_loc",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_weekloc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "evac_cost_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_evaccostpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "evac_cost_alt_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_evaccostaltpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "break_even_price_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricepool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "break_even_price_alt_pool",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "maersk_breakevenpricealtpool",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "action",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_action",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "standard_comment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_standardcomment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "case_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_caseid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "work_order_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_wonumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "disposed_date_confirmed_by_the_customer",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_disposeddateonfirmedbycustomer",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Dispatcher_APM_ID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_dispatcherapmid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "expected_container_sales_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_expectedcontainersaleslocationid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "last_mother_vessel_arrival_time",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_lastmothervesselarrivaltime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "estimated_status_of_delivery",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_estimatedstatusofdelivery",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "move",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_move",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "move_timestamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_movetimestamp",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dipla_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssdiplalocation"
										}
									},
									{
										"source": {
											"name": "last_rail_dest",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_csslastraildestination"
										}
									},
									{
										"source": {
											"name": "move_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_cssmovelocationid"
										}
									},
									{
										"source": {
											"name": "checksum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "country_of_port_entry",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_portentrycountry",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_Intermodal_Container",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopytoSQLActions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "action",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Actions",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_GateBuyActions_Stage",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopytoSQLNumber",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "drop_number",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Number",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_DropNumber_Stage",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopytoSQLDestinationLocationID",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "destination_location_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_DestinationLocationID_Stage",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopytoSQLMove",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "move",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Move",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_Move_Stage",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Get Distinct Values",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopytoSQLActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLDestinationLocationID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLMove",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopytoSQLCountryOfPortEntry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CSS_IntermodalContainer_GetDistinctValues]"
						},
						"linkedServiceName": {
							"referenceName": "boxview_asql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopytoSQLCountryOfPortEntry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Intermodal_Potential_Container Data To Blob_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "intermodalpotentialcontainerstodeliver",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country_of_port_entry",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryCode",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_etl_CSS_IntermodalContainer_CountryOfPortEntry_Stage",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"ForceFullDatasetRefresh": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"variables": {
					"environment": {
						"type": "String",
						"defaultValue": "datalake-dev"
					},
					"datafolderpath": {
						"type": "String",
						"defaultValue": "/ontology/foundry/models/boxview_apps/intermodal_potential_containers_to_deliver/data"
					},
					"sourcefolderpath": {
						"type": "String"
					},
					"currentfolderpath": {
						"type": "String"
					},
					"maxlastmodified": {
						"type": "String"
					},
					"finaldatafolderpath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CSS"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T07:26:47Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/dataflows/Load_Intermodal_Potential_Container Data To Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OLDDMRL Workorder dataverse Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DMRLWorkorder Data From ADX To Staging Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Staging Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Dataverse Exported Folder",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Delete Intermediate Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": "work_orders_with_repair_limits",
								"queryTimeout": "00:50:00",
								"noTruncation": false
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"maxConcurrentConnections": 8
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 1000000
								}
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDataExplorer_DMRLWorkorder",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_DMRLWorkorder_staging_data",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Delete Staging Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_DMRLWorkorder_staging_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Dataverse Exported Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_DMRLWorkorder_exported_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Intermediate Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_DMRLWorkorder_Intermediate_data",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Export DMRL Workorder Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DMRLWorkorder Data From ADX To Staging Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch attribute=\"maersk_datahash\" operator=\"eq\" >\n  <entity name=\"maersk_workorder\" >\n    <attribute name=\"maersk_isshouldrepair\" />\n    <attribute name=\"maersk_totalcostunderwarranty\" />\n    <attribute name=\"maersk_equipmentid\" />\n    <attribute name=\"maersk_equipmentredeliverystatus\" />\n    <attribute name=\"maersk_issales\" />\n    <attribute name=\"maersk_adjustedmrl\" />\n    <attribute name=\"maersk_adjustedmrlbox\" />\n    <attribute name=\"maersk_datahash\" />\n    <attribute name=\"maersk_reasoningforrejection\" />\n    <attribute name=\"maersk_totalpricenotcoveredbywarranty\" />\n    <attribute name=\"maersk_issurplus\" />\n    <attribute name=\"maersk_lastmovetimestamp\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_location\" />\n    <attribute name=\"maersk_isurgent\" />\n    <attribute name=\"maersk_lastmove\" />\n    <attribute name=\"maersk_expirydate\" />\n    <attribute name=\"createdon\" />\n    <attribute name=\"maersk_equipmentsize\" />\n    <attribute name=\"maersk_totalcostwithmaerskparts\" />\n    <attribute name=\"maersk_workorderid\" />\n    <attribute name=\"maersk_isempty\" />\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"maxConcurrentConnections": 8
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 1000000
								}
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"dataIntegrationUnits": 4
						},
						"inputs": [
							{
								"referenceName": "boxview_DMRLWorkorder",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_DMRLWorkorder_exported_data",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Data flow for transformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Export DMRL Container Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "OLDLoad DMRL Workorder Data To Blob",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy DMRL Workorder Data to Dataverse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data flow for transformation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "dmrlworkorder",
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false,
								"alternateKeyName": "maersk_workorderidkey"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "work_order_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "is_sales",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_issales",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "is_surplus",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_issurplus",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "equipment_size",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_equipmentsize",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "last_move_timestamp",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_lastmovetimestamp",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "is_empty",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isempty",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "last_move",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_lastmove",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "equipment_redelivery_status",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_equipmentredeliverystatus",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "adjusted_MRL",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_adjustedmrl",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "adjusted_MRL_box",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_adjustedmrlbox",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "total_cost_with_maersk_parts_usd",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_totalcostwithmaerskparts",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "total_price_not_covered_by_warranty",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_totalpricenotcoveredbywarranty",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "total_cost_under_warranty",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "maersk_totalcostunderwarranty",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "expiry_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "maersk_expirydate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "reasoning_for_rejection",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_reasoningforrejection",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "work_order_created_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "createdon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "is_urgent",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isurgent",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "is_should_repair",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "maersk_isshouldrepair",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_location",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "equipment_id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_equipmentid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "checksum",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "maersk_datahash",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_DMRLWorkorder_Intermediate_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "boxview_DMRLWorkorder",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Export DMRL Container Data From Dataverse to Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export DMRL Workorder Data From Dataverse to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": "<fetch>\n  <entity name=\"maersk_dmrlcontainer\" >\n    <all-attributes/>\n    <attribute name=\"maersk_containertype\" />\n    <attribute name=\"maersk_issales\" />\n    <attribute name=\"maersk_damageprediction\" />\n    <attribute name=\"maersk_reasoning\" />\n    <attribute name=\"maersk_mrlbox\" />\n    <attribute name=\"maersk_issurplus\" />\n    <attribute name=\"maersk_productionyear\" />\n    <attribute name=\"maersk_name\" />\n    <attribute name=\"maersk_location\" />\n    <attribute name=\"maersk_mrlunit\" />\n    <attribute name=\"maersk_equipmentmanufacturer\" />\n    <attribute name=\"maersk_datahash\" />\n    <filter/>\n  </entity>\n</fetch>"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings",
									"maxRowsPerFile": 100000
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "boxview_DMRLContainer",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_DMRLContainer_exported_data",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "DMRL"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-07T05:50:19Z"
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Intermodal_Potential_Container Data To Blob')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CSS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainertodeliver_staging_data",
								"type": "DatasetReference"
							},
							"name": "StagingBlobIntermodelPotentialContainerDataToDeliver"
						},
						{
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_exported_data",
								"type": "DatasetReference"
							},
							"name": "dataversedata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "blob_intermodalpotentialcontainerstodeliver_intermediate_data",
								"type": "DatasetReference"
							},
							"name": "IntermediateBlobIntermodalpotentialcontainerstodeliver",
							"description": "Export data to blob_customer_data"
						}
					],
					"transformations": [
						{
							"name": "DataTransformation"
						},
						{
							"name": "checksum"
						},
						{
							"name": "RelateTwoDatasets"
						},
						{
							"name": "FilterOnlyNewRows"
						},
						{
							"name": "SelectRequiredColumns"
						}
					],
					"script": "parameters{\n\tForceFullRefresh as boolean (false())\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['intermodalpotentialcontainerstodeliver']) ~> StagingBlobIntermodelPotentialContainerDataToDeliver\nsource(output(\n\t\tcreatedby as string,\n\t\tcreatedbyname as string,\n\t\tcreatedbyyominame as string,\n\t\tcreatedon as timestamp,\n\t\tcreatedonbehalfby as string,\n\t\tcreatedonbehalfbyname as string,\n\t\tcreatedonbehalfbyyominame as string,\n\t\timportsequencenumber as integer,\n\t\tmaersk_action as string,\n\t\tmaersk_allocationdate as timestamp,\n\t\tmaersk_bookingnumber as string,\n\t\tmaersk_breakevenpricealtpool as decimal(38,18),\n\t\tmaersk_breakevenpricepool as decimal(38,18),\n\t\tmaersk_caseid as string,\n\t\tmaersk_consigneename as string,\n\t\tmaersk_consigneescvcode as string,\n\t\tmaersk_countryofportentry as string,\n\t\tmaersk_countryofportentryname as string,\n\t\tmaersk_datahash as string,\n\t\tmaersk_destinationlocationid as string,\n\t\tmaersk_destinationlocationname as string,\n\t\tmaersk_diplalocation as string,\n\t\tmaersk_diplalocationname as string,\n\t\tmaersk_dispatcherapmid as string,\n\t\tmaersk_disposeddateonfirmedbycustomer as timestamp,\n\t\tmaersk_dropnumber as string,\n\t\tmaersk_equipmentgroup as string,\n\t\tmaersk_estimatedstatusofdelivery as string,\n\t\tmaersk_evaccostaltpool as decimal(38,18),\n\t\tmaersk_evaccostpool as decimal(38,18),\n\t\tmaersk_expectedcontainersaleslocationid as string,\n\t\tmaersk_intermodalcontainerid as string,\n\t\tmaersk_lastmothervesselarrivaltime as timestamp,\n\t\tmaersk_lastraildestination as string,\n\t\tmaersk_lastraildestinationname as string,\n\t\tmaersk_move as string,\n\t\tmaersk_movelocationid as string,\n\t\tmaersk_movelocationidname as string,\n\t\tmaersk_movetimestamp as timestamp,\n\t\tmaersk_name as string,\n\t\tmaersk_portentrycountry as string,\n\t\tmaersk_productionyear as string,\n\t\tmaersk_region as string,\n\t\tmaersk_returnclientaddress as string,\n\t\tmaersk_returnclientemail as string,\n\t\tmaersk_returnclientname as string,\n\t\tmaersk_standardcomment as string,\n\t\tmaersk_type as string,\n\t\tmaersk_weekloc as string,\n\t\tmaersk_wonumber as string,\n\t\tmodifiedby as string,\n\t\tmodifiedbyname as string,\n\t\tmodifiedbyyominame as string,\n\t\tmodifiedon as timestamp,\n\t\tmodifiedonbehalfby as string,\n\t\tmodifiedonbehalfbyname as string,\n\t\tmodifiedonbehalfbyyominame as string,\n\t\toverriddencreatedon as timestamp,\n\t\townerid as string,\n\t\towneridname as string,\n\t\towneridtype as string,\n\t\towneridyominame as string,\n\t\towningbusinessunit as string,\n\t\towningteam as string,\n\t\towninguser as string,\n\t\tstatecode as integer,\n\t\tstatuscode as integer,\n\t\ttimezoneruleversionnumber as integer,\n\t\tutcconversiontimezonecode as integer,\n\t\tversionnumber as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['intermodalpotentialcontainerstodeliver']) ~> dataversedata\nStagingBlobIntermodelPotentialContainerDataToDeliver derive(container_id = trim(toString(byName('container_id'))),\n\t\tallocation_date = toTimestamp(toString(byName('allocation_date'))),\n\t\tdipla_location_id = trim(toString(byName('dipla_location_id'))),\n\t\tdipla_location_name = trim(toString(byName('dipla_location_name'))),\n\t\tbooking_number = trim(toString(byName('booking_number'))),\n\t\tdrop_number = trim(toString(byName('drop_number'))),\n\t\tdestination_location_id = trim(toString(byName('destination_location_id'))),\n\t\tdestination_location_name = trim(toString(byName('destination_location_name'))),\n\t\tconsignee_name = trim(toString(byName('consignee_name'))),\n\t\tregion = trim(toString(byName('region'))),\n\t\tlast_rail_dest = trim(toString(byName('last_rail_dest'))),\n\t\treturn_client_name = trim(toString(byName('return_client_name'))),\n\t\treturn_client_address = trim(toString(byName('return_client_address'))),\n\t\treturn_client_email = trim(toString(byName('return_client_email'))),\n\t\tproduction_year = toInteger(byName('production_year')),\n\t\tequipment_group = trim(toString(byName('equipment_group'))),\n\t\tconsignee_scv_code = trim(toString(byName('consignee_scv_code'))),\n\t\ttype = trim(toString(byName('type'))),\n\t\tweek_loc = trim(toString(byName('week_loc'))),\n\t\tevac_cost_pool = toDouble(byName('evac_cost_pool')),\n\t\tevac_cost_alt_pool = toDouble(byName('evac_cost_alt_pool')),\n\t\tbreak_even_price_pool = toDouble(byName('break_even_price_pool')),\n\t\tbreak_even_price_alt_pool = toDouble(byName('break_even_price_alt_pool')),\n\t\taction = trim(toString(byName('action'))),\n\t\tstandard_comment = trim(toString(byName('standard_comment'))),\n\t\tcase_id = trim(toString(byName('case_id'))),\n\t\twork_order_number = trim(toString(byName('work_order_number'))),\n\t\tdisposed_date_confirmed_by_the_customer = toTimestamp(byName('disposed_date_confirmed_by_the_customer')),\n\t\tcountry_of_port_entry = trim(toString(byName('country_of_port_entry'))),\n\t\tDispatcher_APM_ID = trim(toString(byName('Dispatcher_APM_ID'))),\n\t\texpected_container_sales_location_id = trim(toString(byName('expected_container_sales_location_id'))),\n\t\tlast_mother_vessel_arrival_time = toTimestamp(byName('last_mother_vessel_arrival_time')),\n\t\testimated_status_of_delivery = trim(toString(byName('estimated_status_of_delivery'))),\n\t\tmove = trim(toString(byName('move'))),\n\t\tmove_timestamp = toTimestamp(byName('move_timestamp')),\n\t\tmove_location_id = trim(toString(byName('move_location_id')))) ~> DataTransformation\nDataTransformation derive(checksum = sha1(columns())) ~> checksum\nchecksum, dataversedata join(container_id == maersk_name,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> RelateTwoDatasets\nRelateTwoDatasets filter(case($ForceFullRefresh==true(), true(), case(maersk_datahash==checksum, false(), true()))) ~> FilterOnlyNewRows\nFilterOnlyNewRows select(mapColumn(\n\t\tcontainer_id,\n\t\tallocation_date,\n\t\tdipla_location_name,\n\t\tbooking_number,\n\t\tdrop_number,\n\t\tdestination_location_id,\n\t\tdestination_location_name,\n\t\tconsignee_name,\n\t\tregion,\n\t\treturn_client_name,\n\t\treturn_client_address,\n\t\treturn_client_email,\n\t\tproduction_year,\n\t\tequipment_group,\n\t\tconsignee_scv_code,\n\t\ttype,\n\t\tweek_loc,\n\t\tevac_cost_pool,\n\t\tevac_cost_alt_pool,\n\t\tbreak_even_price_pool,\n\t\tbreak_even_price_alt_pool,\n\t\taction,\n\t\tstandard_comment,\n\t\tcase_id,\n\t\twork_order_number,\n\t\tdisposed_date_confirmed_by_the_customer,\n\t\tDispatcher_APM_ID,\n\t\texpected_container_sales_location_id,\n\t\tlast_mother_vessel_arrival_time,\n\t\testimated_status_of_delivery,\n\t\tmove,\n\t\tmove_timestamp,\n\t\tdipla_location_id,\n\t\tlast_rail_dest,\n\t\tmove_location_id,\n\t\tcountry_of_port_entry,\n\t\tchecksum\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumns\nSelectRequiredColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IntermediateBlobIntermodalpotentialcontainerstodeliver"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		}
	]
}